CREATE TABLE CUSTOMER
(
 CUSTOMER_ID varchar(50) UNIQUE NOT NULL,
 NAME        varchar(50) NOT NULL,
 MOBILE      varchar(20),
 EMAIL       varchar(50) NOT NULL,
 CREATED_AT  DATETIME,
 UPDATED_AT  DATETIME,
 PASSWORD    varchar(50) NOT NULL,
 CONSTRAINT PK_customers PRIMARY KEY ( CUSTOMER_ID )
);




-- ************************************** MOVIE

CREATE TABLE MOVIE
(
 MOVIE_ID           varchar(50) NOT NULL,
 MOVIE_NAME         varchar(50) NOT NULL,
 MOVIE_LANGUAGE     varchar(50) NOT NULL,
 MOVIE_RELEASE_DATE timestamp NOT NULL,
 MOVIE_DESCRIPTION  varchar(250) NOT NULL,
 CREATED_AT         datetime NOT NULL,
 UPDATED_AT         datetime NOT NULL,
 CONSTRAINT PK_movie PRIMARY KEY ( MOVIE_ID )
);



-- ************************************** CINEMA_HALL

CREATE TABLE CINEMA_HALL
(
 CINEMA_HALL_ID     varchar(50) NOT NULL,
 CINEMA_HALL_NAME   varchar(50) NOT NULL,
 ADDRESS            varchar(150) NOT NULL,
 PHONE              varchar(20) NOT NULL,
 NO_OF_ROWS         int NOT NULL,
 NO_OF_SEATS_IN_ROW int NOT NULL,
 CREATED_AT         datetime NOT NULL,
 UPDATED_AT         datetime NOT NULL,
 CONSTRAINT PK_cinemahalls PRIMARY KEY ( CINEMA_HALL_ID )
);

CREATE TABLE SHOW_DETAIL
(
 SHOW_DETAIL_ID  varchar(50) NOT NULL,
 CINEMA_HALL_ID  varchar(50) NOT NULL,
 MOVIE_ID        varchar(50) NOT NULL,
 SHOWTIME        datetime NOT NULL,
 SHOW_START_DATE datetime NOT NULL,
 SHOW_END_DATE   datetime NOT NULL,
 CREATED_AT      datetime NOT NULL,
 UPDATED_AT      datetime NOT NULL,
 SHOW_STATUS     boolean NOT NULL,
 CONSTRAINT PK_show_detail PRIMARY KEY ( SHOW_DETAIL_ID ),
 CONSTRAINT FK_52 FOREIGN KEY ( CINEMA_HALL_ID ) REFERENCES CINEMA_HALL ( CINEMA_HALL_ID ),
 CONSTRAINT FK_55 FOREIGN KEY ( MOVIE_ID ) REFERENCES MOVIE ( MOVIE_ID )
);




-- ************************************** CINEMA_HALL_SEAT_STATUS

CREATE TABLE CINEMA_HALL_SEAT_STATUS
(
 SEAT_ID        varchar(50) NOT NULL,
 SEAT_NAME      varchar(50) NOT NULL,
 SEAT_STATUS    varchar(50) NOT NULL,
 MOVIE_NAME     varchar(50) NOT NULL,
 SHOW_DETAIL_ID varchar(50) NOT NULL,
 CREATED_AT     datetime NOT NULL,
 UPDATED_AT     datetime NOT NULL,
 CONSTRAINT PK_cinema_hall_seat_status PRIMARY KEY ( SEAT_ID ),
 CONSTRAINT  FOREIGN KEY ( SHOW_DETAIL_ID ) REFERENCES SHOW_DETAIL ( SHOW_DETAIL_ID )
);



CREATE TABLE BOOKING
(
 BOOKING_ID     varchar(50) NOT NULL,
 CINEMA_HALL_ID varchar(50) NOT NULL,
 MOVIE_ID       varchar(50) NOT NULL,
 CUSTOMER_ID    varchar(50) NOT NULL,
 CREATED_AT     datetime NOT NULL,
 UPDATED_AT     datetime NOT NULL,
 SEATS_RESERVED varchar(350) NOT NULL,
 SHOW_DETAIL_ID varchar(50) NOT NULL,
 BOOKING_STATUS varchar(50) NOT NULL,
 CONSTRAINT PK_bookings PRIMARY KEY ( BOOKING_ID ),
 CONSTRAINT  FOREIGN KEY ( CINEMA_HALL_ID ) REFERENCES CINEMA_HALL ( CINEMA_HALL_ID ),
 CONSTRAINT  FOREIGN KEY ( MOVIE_ID ) REFERENCES MOVIE ( MOVIE_ID ),
 CONSTRAINT  FOREIGN KEY ( CUSTOMER_ID ) REFERENCES CUSTOMER ( CUSTOMER_ID ),
 CONSTRAINT  FOREIGN KEY ( SHOW_DETAIL_ID ) REFERENCES SHOW_DETAIL ( SHOW_DETAIL_ID )
);




CREATE TABLE PAYMENT
(
 PAYMENT_ID     varchar(50) NOT NULL,
 BOOKING_ID     varchar(50) NOT NULL,
 CUSTOMER_ID    varchar(50) NOT NULL,
 PAY_MODE       varchar(50) NOT NULL,
 AMOUNT         double  NOT NULL,
 PAYMENT_STATUS varchar(50) NOT NULL,
 CREATED_AT     datetime NOT NULL,
 UPDATED_AT     datetime NOT NULL,
 CONSTRAINT PK_payment PRIMARY KEY ( PAYMENT_ID ),
 CONSTRAINT  FOREIGN KEY ( BOOKING_ID ) REFERENCES BOOKING ( BOOKING_ID ),
 CONSTRAINT  FOREIGN KEY ( CUSTOMER_ID ) REFERENCES CUSTOMER ( CUSTOMER_ID )
);










